
class Fight {
  String name;
  int lifu;
  int atackk;
  int defense;
  int element;
  int draw;
  int player;
  
  Fight (String name_, int lifu_, int atackk_,int defense_, int element_, int draw_){
    name = name_;
    lifu = lifu_;
    atackk = atackk_;
    defense = defense_;
    element = element_;
    draw = draw_;
  }

void D(int draws_,int x,int y, int players){
  player=players;
  translate(x,y);
 switch(draws_){
   case 0:
  
 noStroke();

fill(193,73,113);
//hair
 rect(23,16,10,10);
 fill(223,108,146);
 rect(30,15,10,10);
 rect(40,15,10,10);
 rect(48,16,10,10);
//
 fill(193,73,113);
 rect(17,20,10,10);
 fill(223,108,146);
 rect(20,20,10,10);
 rect(30,20,10,10);
 rect(40,20,10,10);
 rect(50,20,10,10);
 rect(52,20,10,10);
//
 fill(193,73,113);
 rect(16,30,10,10);
 fill(223,108,146);
 rect(20,30,10,10);
 rect(30,30,10,10);
 rect(40,30,10,10);
 rect(50,30,10,10);
 rect(55,30,10,10);
//
 fill(193,73,113);
 rect(13,40,10,10);
 fill(223,108,146);
 rect(20,40,10,10);
 rect(30,40,10,10);
 rect(40,40,10,10);
 rect(50,40,10,10);
 rect(57,40,10,10);

//boddy
 fill(250,227,196);
 rect(30,30,10,10);
 rect(40,30,10,10);
 rect(30,40,10,10);
 rect(40,40,10,10);

//hair detalls
 fill(223,108,146);
 rect(30,25,10,10);
 rect(46,26,10,10);

//clothes1
 fill(165,7,7);
 rect(25,50,10,10);
 fill(208,0,0);
 rect(30,50,10,10);
 rect(40,50,10,10);
 rect(46,50,10,10);
//
 fill(165,7,7);
 rect(23,55,10,10);
 fill(208,0,0);
 rect(49,55,10,10);
 rect(21,57,10,10);
 rect(52,57,10,10);

//boddy detalls
 fill(250,227,196);
 rect(35,42,10,10);

//armasxbody:(
 rect(23,60,10,10);
 rect(30,60,10,10);
 rect(50,60,10,10);
//
 rect(22,70,10,10);
 rect(30,70,10,10);
 rect(40,70,10,10);
 rect(50,70,10,10);
 rect(51,70,10,10);
//
 rect(21,75,10,10);
 rect(30,75,10,10);
 rect(40,75,10,10);
 rect(50,75,10,10);
 rect(53,75,10,10);

//box
 fill(165,7,7);
 rect(15,75,10,10);
 fill(255,1,0);
 rect(20,75,10,10);
 rect(30,75,10,10);
 rect(40,75,10,10);
 rect(50,75,10,10);
 rect(56,75,10,10);
//
 fill(165,7,7);
 rect(13,78,10,10);
 fill(255,1,0);
 rect(20,78,10,10);
 rect(50,78,10,10);
 rect(59,78,10,10);

//pants
 fill(8,42,61);
 rect(28,85,10,10);
 fill(12,59,87);
 rect(35,83,10,10);
 rect(45,85,10,10);
//
 fill(8,42,61);
 rect(29,95,10,10);
 fill(12,59,87);
 rect(44,95,10,10);

//bluse
 fill(189,202,13);
 rect(28,60,10,10);
 fill(212,226,18);
 rect(30,60,10,10);
 rect(40,60,10,10);
 rect(45,60,10,10);
//
 fill(189,202,13);
 rect(27,70,10,10);
 fill(212,226,18);
 rect(30,70,10,10);
 rect(40,70,10,10);
 rect(46,70,10,10);
//
 fill(189,202,13);
 rect(26,75,10,10);
 fill(212,226,18);
 rect(30,75,10,10);
 rect(40,75,10,10);
 rect(47,75,10,10);

//mouse
 fill(198,209,37);
 rect(35,65,5,5);
 rect(45,65,5,5);
 rect(39,70,8,8);

//zpt
 fill(1);
 rect(29,100,10,10);
 rect(44,100,10,10);
 fill(255);
 rect(27,103,13,5);
 rect(44,103,13,5);


   break;
   
   case 1:
 fill(21,8,50);
 rect(35,10,10,10);
 rect(25,15,10,10);
 rect(30,15,10,10);
 rect(40,15,10,10);
 rect(45,15,10,10);
//
 rect(20,20,10,10);
 rect(30,20,10,10);
 rect(40,20,10,10);
 rect(50,20,10,10);
//
 rect(18,30,10,10);
 rect(20,30,10,10);
 rect(30,30,10,10);
 rect(40,30,10,10);
 rect(50,30,10,10);
 rect(53,30,10,10);
//
 rect(16,40,10,10);
 rect(20,40,10,10);
 rect(30,40,10,10);
 rect(40,40,10,10);
 rect(50,40,10,10);
 rect(56,40,10,10);
//
 rect(16,50,10,10);
 rect(20,50,10,10);
 rect(30,50,10,10);
 rect(40,50,10,10);
 rect(50,50,10,10);
 rect(56,50,10,10);
//
 rect(16,60,10,10);
 rect(20,60,10,10);
 rect(30,60,10,10);
 rect(40,60,10,10);
 rect(50,60,10,10);
 rect(56,60,10,10);
//
 rect(16,65,10,10);
 rect(20,65,10,10);
 rect(56,65,10,10);


//body
 fill(239,217,188);
 rect(30,30,10,10);
 rect(40,30,10,10);
 rect(30,40,10,10);
 rect(40,40,10,10);

//hair detalls
 fill(21,8,50);
 rect(30,28,10,10);
 rect(40,28,10,10);

//clothes
 fill(106,97,132);
 rect(30,50,10,10);
 rect(40,50,10,10);

//boddy detalls
 fill(239,217,188);
 rect(35,42,10,10);
 rect(35,45,10,10);

//detallsbottomclothes
 fill(106,97,132);
 rect(32,50,5,7);
 rect(44,50,5,7);

//armasxbody:(
 fill(239,217,188);
 rect(23,60,10,10);
 rect(50,60,10,10);
//
 rect(22,70,10,10);
 rect(51,70,10,10);
//
 rect(21,75,10,10);
 rect(30,75,10,10);
 rect(53,75,10,10);

//legs
 rect(28,85,10,10);
 rect(35,85,10,10);
 rect(45,85,10,10);
//
 rect(29,95,10,10);
 rect(39,79,10,10);
 rect(44,95,10,10);
 rect(29,100,10,10);
 rect(44,100,10,10);

//dress
 fill(180,177,200);
 rect(28,60,10,10);
 rect(30,60,10,10);
 rect(40,60,10,10);
 rect(45,60,10,10);
//
 fill(220,197,130);
 rect(27,70,10,10);
 rect(30,70,10,10);
 rect(40,70,10,10);
 rect(46,70,10,10);
//
 fill(180,177,200);
 rect(26,75,10,10);
 rect(30,75,10,10);
 rect(40,75,10,10);
 rect(47,75,10,10);

//partofthedress
 fill(180,177,200);
 rect(25,78,12,7);
 rect(37,76,12,7);
 rect(37,78,12,7);
 rect(47,78,12,7);
//
 rect(24,85,10,10);
 rect(38,85,10,10);
 rect(52,85,10,10);
//
 fill(180,177,200);
 rect(31,85,7,5);
 rect(46,85,7,5);
//ZPT
 fill(180,177,200);
 rect(29,105,10,5);
 rect(44,105,10,5);
//
 fill(220,197,130);
 rect(31,105,5,2);
 rect(46,105,5,2);
   
   break;
   
   case 2:
  fill(1);
  rect(33,5,10,10);
  rect(43,5,10,10);
  rect(53,5,10,10);
  //
  rect(25,10,10,10);
  rect(33,10,10,10);
  rect(43,10,10,10);
  rect(53,10,10,10);
  rect(62,10,10,10);
  //
  rect(23,15,10,10);
  rect(30,15,10,10);
  rect(40,15,10,10);
  rect(50,15,10,10);
  rect(60,15,10,10);
  rect(65,15,10,10);
  //
  rect(20,20,10,10);
  rect(30,20,10,10);
  rect(40,20,10,10);
  rect(50,20,10,10);
  rect(60,20,10,10);
  rect(70,20,10,10);
  //
  rect(15,30,10,10);
  rect(20,30,10,10);
  rect(30,30,10,10);
  rect(40,30,10,10);
  rect(50,30,10,10);
  rect(60,30,10,10);
  rect(70,30,10,10);
  rect(75,30,10,10);
  //
  rect(14,40,10,10);
  rect(20,40,10,10);
  rect(30,40,10,10);
  rect(40,40,10,10);
  rect(50,40,10,10);
  rect(60,40,10,10);
  rect(70,40,10,10);
  rect(77,40,10,10);
  //
  rect(14,50,10,10);
  rect(28,50,10,10);
  rect(30,50,10,10);
  rect(40,50,10,10);
  rect(50,50,10,10);
  rect(60,50,10,10);
  rect(63,50,10,10);
  rect(77,50,10,10);
  //
  rect(13,60,10,10);
  rect(29,60,10,10);
  rect(30,60,10,10);
  rect(40,60,10,10);
  rect(50,60,10,10);
  rect(60,60,10,10);
  rect(62,60,10,10);
  rect(78,60,10,10);
  //
  rect(13,70,10,10);
  rect(31,70,10,10);
  rect(40,70,10,10);
  rect(50,70,10,10);
  rect(60,70,10,10);
  rect(78,70,10,10);
  //
  rect(13,80,10,10);
  rect(33,80,10,10);
  rect(37,80,10,10);
  rect(53,80,10,10);
  rect(58,80,10,10);
   rect(78,80,10,10);
  //
   rect(14,90,10,10);
   rect(33,90,10,10);
   rect(36,90,10,10);
   rect(55,90,10,10);
   rect(58,90,10,10);
   rect(77,90,10,10);
  //
   rect(35,100,10,10);
   rect(56,100,10,10);
  //eyes
   fill(185,235,69);
   rect(35,20,10,10,2,2,2,2);
   rect(55,20,10,10,2,2,2,2);
   rect(35,28,10,10,2,2,2,2);
   rect(55,28,10,10,2,2,2,2);
   break;
   
   case 3:

//F//  
 fill(255,random(113),158);
 rect(90,56,10,10);
 rect(100,54,10,10);
 rect(110,52,10,10);
 rect(120,50,10,10);
 rect(130,48,10,10);
 rect(140,46,10,10);
 rect(150,44,10,10);
//
 rect(85,60,10,10);
 rect(90,60,10,10);
 rect(100,60,10,10);
 rect(110,60,10,10);
 rect(120,58,10,10);
 rect(130,56,10,10);
 rect(140,54,10,10);
 rect(150,52,10,10);
//
 rect(83,70,10,10);
 rect(90,70,10,10);
 rect(100,70,10,10);
 rect(110,70,10,10);
 rect(120,68,10,10);
 rect(130,66,10,10);
 rect(140,64,10,10);
 rect(148,62,10,10);
//
  rect(82,80,10,10);
 rect(90,80,10,10);
 rect(100,80,10,10);
 rect(108,80,10,10);
 rect(110,87,10,10);
 rect(120,86,10,10);
 rect(130,85,10,10);
//
 rect(85,90,10,10);
 rect(90,90,10,10);
 rect(100,90,10,10);
 rect(110,92,10,10);
 rect(120,91,10,10);
 rect(128,90,10,10);
//
 rect(88,100,10,10);
 rect(90,100,10,10);
 rect(100,100,10,10);
 rect(110,100,10,10);
 rect(115,100,10,10);
//
 rect(92,110,10,10);
 rect(100,110,10,10);
 rect(110,110,10,10);
 rect(113,110,10,10);
//
 rect(94,117,10,10);
 rect(103,116,10,10);
 rect(109,115,10,10);

//i
 fill(200,random(173),288);
 rect(178,85,8,8);
 rect(173,80,8,8);
 rect(180,80,8,8);
 rect(183,80,8,8);
//--
 rect(170,75,8,8);
 rect(178,75,8,8);
 rect(185,75,8,8);
//--
 rect(172,71,8,8);
 rect(180,74,5,5);
 rect(183,71,8,8);

//
 fill(255,random(113),158);
 rect(164,95,10,10);
 rect(170,95,10,10);
 rect(180,95,10,10);
 rect(187,95,10,10);

//
 rect(160,100,10,10);
 rect(170,100,10,10);
 rect(180,100,10,10);
 rect(190,100,10,10);
//
 rect(163,110,10,10);
 rect(170,110,10,10);
 rect(180,110,10,10);
 rect(187,110,10,10);
//
 rect(164,113,10,10);
 rect(174,114,10,10);
 rect(184,113,10,10);


//g
 rect(220,80,10,10);
 rect(230,80,10,10);
 rect(240,80,10,10);
 rect(250,80,10,10);
//
 rect(217,90,10,10);
 rect(220,90,10,10);
 rect(230,90,10,10);
 rect(240,90,10,10);
 rect(250,90,10,10);
 rect(253,90,10,10);
//
 rect(218,100,10,10);
 rect(225,100,10,10);
 rect(235,100,10,10);
 rect(245,100,10,10);
 rect(254,100,10,10);
//
 rect(245,110,10,10);
 rect(250,110,10,10);
 rect(255,110,10,10);
//
 rect(245,115,10,10);
 rect(250,115,10,10);
 rect(255,115,10,10);
 rect(230,115,10,10);
//
 rect(230,120,10,11);
 rect(235,120,10,11);
 rect(240,120,10,12);
 rect(245,120,10,13);
 rect(250,120,10,12);
 rect(255,120,10,9);


//H
 rect(281,47,10,10);
 rect(285,47,10,10);
//
 rect(279,50,10,10);
 rect(285,50,10,10);
 rect(290,50,10,10);
//
 rect(279,60,10,10);
 rect(285,60,10,10);
 rect(290,60,10,10);
//
 rect(279,70,10,10);
 rect(285,70,10,10);
 rect(295,70,10,10);
 rect(300,70,10,10);
 rect(310,70,10,10);
 rect(318,70,10,10);
//
 rect(280,80,10,10);
 rect(290,80,10,10);
 rect(300,80,10,10);
 rect(310,80,10,10);
 rect(320,80,10,10);
//
 rect(280,90,10,10);
 rect(290,90,10,10);
 rect(300,90,10,10);
 rect(310,90,10,10);
 rect(320,90,10,10);
//
 rect(280,100,10,10);
 rect(290,100,10,10);
 rect(300,100,10,10);
 rect(310,100,10,10);
 rect(320,100,10,10);
//
 rect(282,104,10,10);
 rect(289,108,10,10);
 rect(293,103,10,10);
//
 rect(313,103,10,10);
 rect(316,108,10,10);
 rect(320,105,10,10);

//t
 rect(353,55,10,10);
 rect(360,55,10,10);
 rect(367,55,10,10);
//
 rect(350,60,10,10);
 rect(360,60,10,10);
 rect(370,60,10,10);
//
 rect(350,65,10,10);
 rect(360,65,10,10);
 rect(370,65,10,10);
//
 rect(345,75,10,10);
 rect(350,75,10,10);
 rect(360,75,10,10);
 rect(370,75,10,10);
 rect(375,75,10,10);
//
 rect(340,80,10,10);
 rect(350,80,10,10);
 rect(360,80,10,10);
 rect(370,80,10,10);
 rect(380,80,10,10);
//
 rect(343,85,10,10);
 rect(350,85,10,10);
 rect(360,85,10,10);
 rect(370,85,10,10);
 rect(377,85,10,10);
//
 rect(350,95,10,10);
 rect(360,95,10,10);
 rect(370,95,10,10);
//
 rect(350,100,10,10);
 rect(360,100,10,10);
 rect(370,100,10,10);
//
 rect(353,105,10,10);
 rect(365,105,10,10);
 rect(375,105,10,10);
 rect(385,104,10,10);
 rect(395,103,10,10);
//
 rect(357,110,10,10);
 rect(365,110,10,10);
 rect(375,110,10,10);
 rect(385,110,10,10);
 rect(395,110,10,10);
   break;
 }
}//
  
  //////
  void Dlife(){
    int ps=lifu;//ps=points
    if(player==1){
      fill(173,50,random(245));
      rect(1,450,ps*5,30,10,10,10,10);
    }
    if(player==2){
      fill(173,50,random(245));
      rect(510,450,ps*5,30,10,10,10,10);
    }
  }
  
  /////
  void atack1(){
    //int y=(int)random(110);
    int r=(int)random(30);
    int d=10;        
    int c = (int)random(100);
    if(c>=0 && c<=30) d=(int)(1.5*d);
    //_______________
    if(player==1){
      fill(200,random(50),100);
      rect(xatack-700, 20, r, r,10,10,10,10);
      xatack = xatack+5;
      if(xatack==700){
        xlife=xlife+ d*5;
        CROW.lifu=CROW.lifu-d;
        xatack = 0;
        Turn=2;
        key = 0;
      }
    }
    //
    if(player==2){
      fill(random(200),250,100);
      ellipse(xatack, 50, r, r);
      xatack = xatack-5;
      if(xatack==-700){
        key = 0;
        Turn=1;
         HI.lifu=HI.lifu-d;
        xatack= 0;
      }
    }
  }
  
   //_________________ 
  void atack2(){
    int y=(int)random(20);
    int r=(int)random(20);
    int d=15;        
    int c = (int)random(40);
    if(c>=0 && c<=18) d=(int)(1.5*d);
    fill(64, 204,206);
    int y1,y2,y3;
    y1=(int)random(25);
    y2=(int)random(25);
    y3=(int)random(25);
    
    if(player==1){
     triangle(xatack-500,20+y1,xatack -550,20+y2,xatack-500,20+y3);
      xatack = xatack + 5;
      if(xatack==700)
      {
        xlife=xlife + d*5;
        key=0;
        Turn=2;
        CROW.lifu=CROW.lifu - d;
        xatack = 0;
      }
    }

    if(player==2){
       fill(140,34,193);
       rect(xatack, 40-y, r+50, r,10,10,10,10);
       xatack = xatack - 5;
      if(xatack==-700){
        key=0;
        Turn=1;
         HI.lifu=HI.lifu-d;
        xatack= 0;
      }
    }
  }  
}
void s(){
  fill(random(264),103,253);
  noStroke();
  rect(random(1100),random(500), random(100), random(20),5,5,5,5);
  
}
///////////
void keyPressed(){
  if(background==1){
    if(ID >=0 && ID<=2)
    {
      if(key=='x'){
        if(ID==2) return;
        cx=cx+100;
        ID = ID+1;
        key=0;
      }
      if(key=='z'){
        if(ID==0) return;
        cx=cx-100;
        ID = ID-1;
        key=0;
      }
      if(ID1==-1){
        if(key=='\n'){
          ID1 = ID;
          ID2 = -2;
          ID = 0;
          cx = 0;
          cy = 0;
          key = 0;          
        }
      }
      if(ID2==-2){       
        if(key=='\n'){
          ID2 = ID;
          ID= 0;
          cx = 0;
          cy = 0;
          key = 0;  
         background= 2;
        }
      }
    }
  }
  if(background==2){
    if(CROW.lifu<=0 || HI.lifu<=0)
    {
      if(key=='b'){
       background=0;
        
      }
    }
  }
}